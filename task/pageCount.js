/* 교과서 넘기기
*
* Viserion은 예민한 사람들이 많은 도서관에서 공부를 합니다.
* Viserion은 한번에 특정 페이지를 열지 못하고, 교과서의 맨 앞장이나 맨 뒷장부터 차례로 넘길 수만 있습니다.
* 그래서 책을 넘기는 소리를 적게 내는 방법을 고민해야 합니다.
* 또한 항상 한번에 한페이지만 넘길 수 있습니다. Viserion이 책 앞장을 펼치면, 항상 1페이지는 오른쪽에 있습니다.
*    _____________________
*    |         :         |
*    |         :         |
*    |         :         |
*    |         :  1page  |
*    |_________;_________|
*
* 1페이에서 한장을 넘기면, 다음 장에는 2페이지와 3페이지가 있습니다.
*    _____________________
*    |         :         |
*    |         :         |
*    |         :         |
*    |  2page  :  3page  |
*    |_________;_________|
*
* 교과서의 마지막장에는 주어진 책의 쪽수에 따라서 앞쪽에만 페이지가 출력되어있을 수도 있습니다.
* 총 n페이지의 교과서가 있고, Viserion이 p페이지를 읽고 싶을때, 가장 적은 횟수로 책을 넘겨 p페이지를 펼칠 수 있는 횟수는 얼마일까요?
* 예를들어, n=6인 교과서가 있고, p=2인 페이지를 열어보고 싶을때, 책을 가장 최소로 넘겨서 2페이지를 열 수 있는 방법은,
*    _____________________        _____________________
*    |         :         |        |         :         |
*    |         :         |        |         :         |
*    |         :         |  ===>  |         :         |
*    |         :  1page  |        |  2page  :  3page  |
*    |_________;_________|        |_________;_________|
* 교재의 맨 앞장부터 넘기는 경우, 1번만 페이지를 넘기면 됩니다.
*    _____________________        _____________________        _____________________
*    |         :         |        |         :         |        |         :         |
*    |         :         |        |         :         |        |         :         |
*    |         :         |  ===>  |         :         |  ===>  |         :         |
*    |  6page  :         |        |  4page  :  5page  |        |  2page  :  3page  |
*    |_________;_________|        |_________;_________|        |_________;_________|
* 교과서의 맨 뒷장부터 넘기는 경우, 2번을 넘겨야 합니다.
* 따라서 가장 적게 책장을 넘기는 횟수는 1이 되며, 함수에서 1을 반환해주면 됩니다.
*
* @param {number} n - 총 페이지 수 
* @param {number} p - 읽고자 한 페이지
* @return {number}
*/

// 아래의 export default 키워드는 '아직' 신경쓰지 않으셔도 됩니다. :)
function pageCount(n, p) {
  // Complete the pageCount function.
  
  const frontIdx = parseInt(n/2);
  const lastIdx = parseInt(p/2);
  const backIdx = Math.abs(lastIdx - frontIdx);

  if (frontIdx <= backIdx) return frontIdx;
  return backIdx;
  
}
//pageCount(83246, 78132)

//(6, 2) 1 
//답은 pageCount(5, 4) 0
//답은 pageCount(18183, 18042) 70
//pageCount(83246, 78132) 2557